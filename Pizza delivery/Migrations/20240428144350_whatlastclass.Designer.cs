// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizza_delivery.Models;

#nullable disable

namespace Pizza_delivery.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240428144350_whatlastclass")]
    partial class whatlastclass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("Pizza_delivery.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desc = "Pizza classics that you all love",
                            Name = "Classics"
                        },
                        new
                        {
                            Id = 2,
                            Desc = "Meat on your pizza",
                            Name = "meat"
                        },
                        new
                        {
                            Id = 3,
                            Desc = "For people who can't eat meat",
                            Name = "Vegan Pizzas"
                        });
                });

            modelBuilder.Entity("Pizza_delivery.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OrderPlaced")
                        .HasColumnType("TEXT");

                    b.Property<double?>("OrderTotal")
                        .HasColumnType("REAL");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress2")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Pizza_delivery.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Pizza_delivery.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Allergyinfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPizzaOfTheWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Longdesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Shortdesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PizzaId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            Allergyinfo = "Contains dairy",
                            CategoryId = 1,
                            ImgThumbnailUrl = "https://imgs.search.brave.com/VlW0WkN_bI_ZhO6IsbzS-HMFLwxx8CYrryk_jVEwasU/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5nZXR0eWltYWdl/cy5jb20vaWQvMTY4/Mjc1ODE2L3Bob3Rv/L2NoZWVzZS5qcGc_/cz02MTJ4NjEyJnc9/MCZrPTIwJmM9cE9W/b2JkTlEwMzJTZ082/UXo0Wm85TmhSRVpI/UTc5cVJJeThXaDZ4/Y28waz0",
                            ImgUrl = "https://imgs.search.brave.com/Jjnq5FREzGTpj2krf9WTHMj5l9BvaHVf5UJciqytNPA/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5pc3RvY2twaG90/by5jb20vaWQvMTgw/ODIyNjYxL3Bob3Rv/L2NoZWVzZS1waXp6/YS5qcGc_cz02MTJ4/NjEyJnc9MCZrPTIw/JmM9NzVFcS1FMm5X/aWdpVXRnejJkamty/YTU0X0J6dVRBYkRK/V3kxUWktS0xZYz0",
                            InStock = true,
                            IsPizzaOfTheWeek = false,
                            Longdesc = "A delicious pizza topped with melted cheese",
                            Name = "Cheese Pizza",
                            Price = 9.9900000000000002,
                            Shortdesc = "Classic Cheese Pizza"
                        },
                        new
                        {
                            PizzaId = 2,
                            Allergyinfo = "nothing",
                            CategoryId = 3,
                            ImgThumbnailUrl = "https://imgs.search.brave.com/qgMChR5wVbLVTI4oumvpSjoqyRhya-jHQnpll5tPrcI/rs:fit:860:0:0/g:ce/aHR0cHM6Ly90aGVi/YW5hbmFkaWFyaWVz/LmNvbS93cC1jb250/ZW50L3VwbG9hZHMv/MjAyMy8wMS92ZWdh/bi1waXp6YS1kb3Vn/aF81NjQzLTcwMHgx/MDUwLmpwZw",
                            ImgUrl = "https://imgs.search.brave.com/MeJ3RDJ3UuA5xaxwq65TaWkVp7e-f6asXGspokh7bfk/rs:fit:860:0:0/g:ce/aHR0cHM6Ly93aWxs/YW1ldHRldHJhbnNw/bGFudC5jb20vd3At/Y29udGVudC91cGxv/YWRzLzIwMTkvMDgv/aG9tZW1hZGUtdmVn/YW4tY2hlZXNlLXBp/enphLTY4NXgxMDI0/LmpwZw",
                            InStock = true,
                            IsPizzaOfTheWeek = false,
                            Longdesc = "Plant based cheese",
                            Name = "Vegan Cheese Pizza",
                            Price = 10.0,
                            Shortdesc = "Plant based cheese"
                        },
                        new
                        {
                            PizzaId = 3,
                            Allergyinfo = "Contains gluten and meat",
                            CategoryId = 2,
                            ImgThumbnailUrl = "https://imgs.search.brave.com/v15TfinqIFjMlrGusGgqAmpOLJkk4cjNWG6Zgyr2QT0/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9ob21l/a2l0Y2hlbnRhbGsu/Y29tL3dwLWNvbnRl/bnQvdXBsb2Fkcy8y/MDIxLzExL3NhbGFt/aS1vbi1waXp6YS5q/cGc",
                            ImgUrl = "https://imgs.search.brave.com/7ybT6v3dfciYJZtBrg1RtbbEYqeouH3OYXV-DB0Wu9s/rs:fit:860:0:0/g:ce/aHR0cHM6Ly90aGVy/ZWNpcGVjcml0aWMu/Y29tL3dwLWNvbnRl/bnQvdXBsb2Fkcy8y/MDIyLzEyL3NhbGFt/aV9waXp6YS0xLTc1/MHgxMDAwLmpwZw",
                            InStock = true,
                            IsPizzaOfTheWeek = true,
                            Longdesc = "Enjoy the bold flavor of thinly sliced salami on our signature pizza crust",
                            Name = "Salami Pizza",
                            Price = 11.99,
                            Shortdesc = "Delicious salami slices atop a crispy crust"
                        },
                        new
                        {
                            PizzaId = 4,
                            Allergyinfo = "Contains gluten and meat",
                            CategoryId = 2,
                            ImgThumbnailUrl = "https://imgs.search.brave.com/-Nlm3ldmmU4Hs-MVe-fslBqlek8dB1usYyn6jLQ_ARM/rs:fit:860:0:0/g:ce/aHR0cDovL2VtaWx5/Yml0ZXMuY29tL3dw/LWNvbnRlbnQvdXBs/b2Fkcy8yMDExLzEy/L01lYXQtTG92ZXIt/MjUyN3MtUGl6emEt/NWMtNjIweDQxMC5q/cGc",
                            ImgUrl = "https://imgs.search.brave.com/DvGM0mzzdbkZsJv3X0EsS1fRb0V4S9Rm92R3NSs0u84/rs:fit:860:0:0/g:ce/aHR0cHM6Ly93d3cu/YmFjaW5vcy5jb20v/d3AtY29udGVudC91/cGxvYWRzLzIwMjEv/MDUvVGhlLVVsdGlt/YXRlLU1lYXQtTG92/ZXJzLVBpenphLmpw/Zw",
                            InStock = true,
                            IsPizzaOfTheWeek = false,
                            Longdesc = "Indulge in a hearty pizza topped with a variety of meats including pepperoni,sausage,ham,and bacon",
                            Name = "Meat Lover's Pizza",
                            Price = 13.99,
                            Shortdesc = "Loaded with savory meats"
                        });
                });

            modelBuilder.Entity("Pizza_delivery.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("PizzaId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Pizza_delivery.Models.OrderDetail", b =>
                {
                    b.HasOne("Pizza_delivery.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizza_delivery.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizza_delivery.Models.Pizza", b =>
                {
                    b.HasOne("Pizza_delivery.Models.Category", "Category")
                        .WithMany("Pizzas")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Pizza_delivery.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Pizza_delivery.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizza_delivery.Models.Category", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Pizza_delivery.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
